package proyectopie;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 56962
 */
public class FrameCitacion extends javax.swing.JFrame {

    public static String fecha_actual_glo; 
    public static String fecha_reunion_glo; 

    /**
     * Creates new form FrameCitacion
     */
    public FrameCitacion() {
        initComponents();
         this.setLocationRelativeTo(null);
         try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FrameEvaluacionParte5.class.getName()).log(Level.SEVERE, null, ex);
        }
         jButton2.setVisible(false);
           
         
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        calendarcitacion = new com.toedter.calendar.JCalendar();
        comboautoridad = new javax.swing.JComboBox();
        txthora = new javax.swing.JTextField();
        txtminutos = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel1.setText("Ingrese fecha de reunion");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setText("Ingrese hora de reunion");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel3.setText("Â¿ Quien emite la citacion ?");

        comboautoridad.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Equipo P.I.E", "Profesora Diferencial", "Psocologo", "Asistente Social", "Fonoaudiologo", "Terapeuta Ocupacional", "Director del Establecimiento" }));

        txthora.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        txthora.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txthoraKeyTyped(evt);
            }
        });

        txtminutos.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        txtminutos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtminutosKeyTyped(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText(":");

        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton1.setText("Guardar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton2.setText("Generar Citacion");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Volver");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(comboautoridad, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(txthora, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtminutos, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(calendarcitacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 165, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addComponent(jButton2))
                        .addGap(20, 20, 20))))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton3)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton3)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(63, 63, 63)
                                .addComponent(jButton1)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(calendarcitacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txthora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtminutos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(comboautoridad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(86, 86, 86))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
    MenuPrincipal frame = new MenuPrincipal(); 
    frame.setVisible(true);                                                                                                                
    FrameCitacion.this.dispose();
    }//GEN-LAST:event_jButton3MouseClicked

    public static String fechaActual(){
    
    Date fecha=new Date();
    SimpleDateFormat formatoFecha=new SimpleDateFormat("YYYY/MM/dd");
    return formatoFecha.format(fecha);
   
    
}
    public static String diaActual(){
    
    Date fecha=new Date();
    SimpleDateFormat formatoFecha=new SimpleDateFormat("dd");
    return formatoFecha.format(fecha);
   
    
}
    public static String mesActual(){
    
    Date fecha=new Date();
    SimpleDateFormat formatoFecha=new SimpleDateFormat("MMMMMMMMMM");
    return formatoFecha.format(fecha);
   
    
}
        public static String aÃ±oActual(){
    
    Date fecha=new Date();
    SimpleDateFormat formatoFecha=new SimpleDateFormat("yyyy");
    return formatoFecha.format(fecha);
   
    
}
   
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
  
        int ho= Integer.parseInt(txthora.getText());
        int mi= Integer.parseInt(txtminutos.getText());
        
        if (ho >22 || ho<0 || mi>59 || mi<0 ){
             JOptionPane.showMessageDialog(null,"Hora invalida","ERROR",JOptionPane.ERROR_MESSAGE);
        }else{
         int aÃ±o = calendarcitacion.getCalendar().get(Calendar.YEAR);
         int mes = calendarcitacion.getCalendar().get(Calendar.MARCH);
         int dia = calendarcitacion.getCalendar().get(Calendar.DAY_OF_MONTH);
         
         String fecha_reunion =(aÃ±o+"-"+mes+"-"+dia);
         
         String descripcion_fecha = "Llancanao,  "+diaActual()+" de "+mesActual()+" del " +aÃ±oActual();
         
         String fecha_actual=fechaActual();
         
         String hora_minuto = txthora.getText()+":"+txtminutos.getText()+" hrs"  ;
         
         String autoridad = comboautoridad.getSelectedItem().toString();
 
        if(txthora.getText().isEmpty() || txtminutos.getText().isEmpty() ){
          
         JOptionPane.showMessageDialog(null,"Debe inresar la Hora de reunion","ERROR",JOptionPane.ERROR_MESSAGE);
        }else
         {
             ConexionSQL conectar = new ConexionSQL();
             Statement st = conectar.Conectar();
        try{
             st.executeUpdate("INSERT INTO citaciones (fecha_citacion , fecha_reunion , hora , autoridad , descripcion_fecha) values ('" + fecha_actual +"', '" + fecha_reunion +"', '" + hora_minuto +"', '" + autoridad +"' , '" + descripcion_fecha +"')");
           JOptionPane.showMessageDialog(null, "Citacion ingresado correctamente");
           fecha_actual_glo = fecha_actual;
           fecha_reunion_glo = fecha_reunion;
            jButton2.setVisible(true);
        }
        catch (SQLException ex){
            JOptionPane.showMessageDialog(null, ex);
        } 
        }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       try {
            Connection con = DriverManager.getConnection("jdbc:sqlserver://192.168.50.107:1433;databaseName = integracion_pie","sa","1234321");
           
            JasperReport jr = JasperCompileManager.compileReport("C:/Users/56962/Desktop/ProyectoPIE/src/proyectopie/Reporte_Citacion.jrxml");
         
            Map Parametros = new HashMap();
           
            Parametros.put("ParametroFechaActual",fecha_actual_glo);
            Parametros.put("ParametroFechaReunion",fecha_reunion_glo);
            
            
            JasperPrint jp = JasperFillManager.fillReport(jr,Parametros,con);
          
            JasperViewer jv = new JasperViewer(jp,false);
          
            jv.setTitle("Reporte Lista Completa");
            
            jv.setVisible(true);
            jButton2.setVisible(false);
            } catch (SQLException ex) {
            Logger.getLogger(FrameCitacion.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, ex);
        } catch (JRException ex) {
            Logger.getLogger(FrameCitacion.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void txthoraKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txthoraKeyTyped
        int n=2;
       if(txthora.getText().length()>=n){
            getToolkit().beep();
           evt.consume();
            JOptionPane.showMessageDialog(null,"Trate de ingresar hora valida","ERROR",JOptionPane.WARNING_MESSAGE);
       }
       char c=evt.getKeyChar();
               if(c<'0' || c>'9'){
                   evt.consume();
               }
    }//GEN-LAST:event_txthoraKeyTyped

    private void txtminutosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtminutosKeyTyped
      int n=2;
       if(txtminutos.getText().length()>=n){
            getToolkit().beep();
           evt.consume();
            JOptionPane.showMessageDialog(null,"Trate de ingresar hora valida","ERROR",JOptionPane.WARNING_MESSAGE);
       }
       char c=evt.getKeyChar();
               if(c<'0' || c>'9'){
                   evt.consume();
               }
    }//GEN-LAST:event_txtminutosKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameCitacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameCitacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameCitacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameCitacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameCitacion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JCalendar calendarcitacion;
    private javax.swing.JComboBox comboautoridad;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField txthora;
    private javax.swing.JTextField txtminutos;
    // End of variables declaration//GEN-END:variables
}
