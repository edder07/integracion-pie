package proyectopie;

import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Calendar;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 56962
 */
public class FrameAlumno extends javax.swing.JFrame {

    /**
     * Creates new form FrameAlumno
     */
    public FrameAlumno() {
        initComponents();
        this.setExtendedState(MAXIMIZED_BOTH);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtrut = new javax.swing.JTextField();
        txtnombre = new javax.swing.JTextField();
        txtapellidop = new javax.swing.JTextField();
        txtapellidom = new javax.swing.JTextField();
        txtfono = new javax.swing.JTextField();
        txtdireccion = new javax.swing.JTextField();
        combosexo = new javax.swing.JComboBox();
        combonacionalidad = new javax.swing.JComboBox();
        calendarnacimiento = new com.toedter.calendar.JCalendar();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectopie/logoalumno1.png"))); // NOI18N
        jLabel1.setText("     ESTUDIANTE");
        jLabel1.setAlignmentX(0.5F);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel2.setText("INGRESE RUT DEL ALUMNO");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel3.setText("INGRESE NOMBRES DEL ALUMNO");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel4.setText("INGRESE APELLIDO PATERNO");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel5.setText("INGRESE APELLIDO MATERNO");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel6.setText("INGRESE FONO ALUMNO");

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel7.setText("INGRESE DIRECCION ALUMNO");

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel8.setText("SEXO ALUMNO");

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel9.setText("NACIONALIDAD ALUMNO");

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel10.setText("FECHA NACIMIENTO");

        txtrut.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        txtrut.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtrutKeyTyped(evt);
            }
        });

        txtnombre.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        txtnombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtnombreKeyTyped(evt);
            }
        });

        txtapellidop.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        txtapellidop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtapellidopActionPerformed(evt);
            }
        });
        txtapellidop.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtapellidopKeyTyped(evt);
            }
        });

        txtapellidom.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        txtapellidom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtapellidomKeyTyped(evt);
            }
        });

        txtfono.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        txtfono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtfonoKeyTyped(evt);
            }
        });

        txtdireccion.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        txtdireccion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtdireccionKeyTyped(evt);
            }
        });

        combosexo.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        combosexo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "HOMBRE", "MUJER", "OTRO" }));

        combonacionalidad.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        combonacionalidad.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "CHILENA", "ARGENTINA", "VENEZOLANA", "PERUANA", "COLOMBIANA", "BOLIVIANA", "HAITIANA" }));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectopie/lupa33.png"))); // NOI18N
        jButton1.setText("Buscar");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Guardar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Modificar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Limpiar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectopie/btnatras.png"))); // NOI18N
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton5MouseClicked(evt);
            }
        });
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(289, 289, 289)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel6)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtfono, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(31, 31, 31)
                                    .addComponent(jLabel7)
                                    .addGap(27, 27, 27)
                                    .addComponent(txtdireccion))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(30, 30, 30)
                                        .addComponent(txtrut, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton1))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtnombre, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel4)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(241, 241, 241)
                                        .addComponent(txtapellidop, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel5)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtapellidom, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addGap(18, 18, 18)
                                        .addComponent(combosexo, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(13, 13, 13)
                                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(combonacionalidad, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel10))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(jButton2)
                                        .addGap(84, 84, 84)
                                        .addComponent(jButton3)
                                        .addGap(85, 85, 85)
                                        .addComponent(jButton4)))
                                .addGap(44, 44, 44)
                                .addComponent(calendarnacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(54, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(txtrut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtnombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(txtapellidop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtapellidom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(txtfono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtdireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(combosexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(combonacionalidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButton2)
                                .addComponent(jButton3)
                                .addComponent(jButton4))))
                    .addComponent(calendarnacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 8, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseClicked
      Ingresos frame3 = new Ingresos(); 
    frame3.setVisible(true);                                                                                                                
    FrameAlumno.this.dispose();
    }//GEN-LAST:event_jButton5MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
         String rut_alumno = txtrut.getText();
         //String nombre_alumno = txtnombre.getText();
         //String apellido_paterno = txtapellidop.getText();
         //String apellido_materno = txtapellidom.getText();
         //Integer fono_alumno = Integer.parseInt(txtfono.getText());
         //String direccion_alumno = txtdireccion.getText();
 
        if(rut_alumno.isEmpty() ){
          
         JOptionPane.showMessageDialog(null,"Debe inresar RUT","ERROR",JOptionPane.ERROR_MESSAGE);
        }else
         {
             ConexionSQL conectar = new ConexionSQL();
             Statement st = conectar.Conectar();
        try{
            ResultSet rs = st.executeQuery("select alumno.nombres_alumno, alumno.apellido_paterno, alumno.apellido_materno,alumno.fono_alumno, alumno.direccion_alumno , alumno.sexo_alumno , alumno.fecha_nacimiento , alumno.nacionalidad_alumno from alumno where alumno.rut_alumno='" + rut_alumno +"'");
            if (rs.next()){
                
                txtnombre.setText(rs.getString("nombres_Alumno")) ;
                txtapellidop.setText(rs.getString("apellido_paterno"));
                txtapellidom.setText(rs.getString("apellido_materno"));
                txtfono.setText(rs.getString("fono_alumno"));
                txtdireccion.setText(rs.getString("direccion_alumno"));
                combosexo.setSelectedItem(rs.getString("sexo_alumno"));
                combonacionalidad.setSelectedItem(rs.getString("nacionalidad_alumno"));
                calendarnacimiento.setDate(rs.getDate("fecha_nacimiento"));
                
                   
            } else{
                txtrut.setText("");
              
                JOptionPane.showMessageDialog(null,"RUT no existe","ERROR",JOptionPane.ERROR_MESSAGE);
            }
        }
        catch (SQLException ex){
            JOptionPane.showMessageDialog(null, ex);
        } 
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked

    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
      String rut_alumno = txtrut.getText();
       String nombre_alumno = txtnombre.getText();
       String apellido_paterno = txtapellidop.getText();
       String apellido_materno = txtapellidom.getText();
       int fono_alumno = Integer.parseInt(txtfono.getText());   
       String direccion_alumno = txtdireccion.getText();
       String sexo_alumno = (String) combosexo.getSelectedItem();
       String nacionalidad_alumno = (String) combonacionalidad.getSelectedItem();
       
         int año = calendarnacimiento.getCalendar().get(Calendar.YEAR);
         int mes = calendarnacimiento.getCalendar().get(Calendar.MARCH)+1;
         int dia = calendarnacimiento.getCalendar().get(Calendar.DAY_OF_MONTH);

          String fecha_nacimiento =(año+"-"+mes+"-"+dia);
       
 
        if(rut_alumno.isEmpty() ){
          
         JOptionPane.showMessageDialog(null,"Debe inresar RUT","ERROR",JOptionPane.ERROR_MESSAGE);
        }else
         {
             ConexionSQL conectar = new ConexionSQL();
             Statement st = conectar.Conectar();
        try{
             st.executeUpdate("UPDATE alumno SET nombres_alumno = '" + nombre_alumno +"' , apellido_paterno ='" + apellido_paterno + "',apellido_materno = '" + apellido_materno +"',fono_alumno = " + fono_alumno +", direccion_alumno = '" + direccion_alumno +"', fecha_nacimiento = '" + fecha_nacimiento +"' , sexo_alumno = '" + sexo_alumno +"', nacionalidad_alumno = '" + nacionalidad_alumno + "' WHERE alumno.rut_alumno = '" + rut_alumno +"'");
           JOptionPane.showMessageDialog(null, "Alumno Actualizado correctamente");
        }
        catch (SQLException ex){
            JOptionPane.showMessageDialog(null, ex);
        } 
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    void insertar_alumno(){
               String rut_alumno = txtrut.getText();
       
       
         int año = calendarnacimiento.getCalendar().get(Calendar.YEAR);
         int mes = calendarnacimiento.getCalendar().get(Calendar.MARCH)+1;
         int dia = calendarnacimiento.getCalendar().get(Calendar.DAY_OF_MONTH);

         String fecha_nacimiento =(año+"-"+mes+"-"+dia);
         boolean respuesta;
         respuesta=validarRut(rut_alumno);
         
         if (respuesta==false){
             JOptionPane.showMessageDialog(rootPane,"Rut Invalido","ERROR", JOptionPane.ERROR_MESSAGE);
             txtrut.grabFocus();
             
             }else {
             
             if(rut_alumno.isEmpty() || txtnombre.getText().isEmpty() || txtapellidop.getText().isEmpty() || txtapellidom.getText().isEmpty() || txtfono.getText().isEmpty() || txtdireccion.getText().isEmpty() ){
                 
                 JOptionPane.showMessageDialog(null,"No deje campos en blanco","ERROR",JOptionPane.ERROR_MESSAGE);
                 
                 }else {
                 
                 String nombre_alumno = txtnombre.getText();
                 String apellido_paterno = txtapellidop.getText();
                 String apellido_materno = txtapellidom.getText();
                 int fono_alumno = Integer.parseInt(txtfono.getText());   
                 String direccion_alumno = txtdireccion.getText();
                 String sexo_alumno = (String) combosexo.getSelectedItem();
                 String nacionalidad_alumno = (String) combonacionalidad.getSelectedItem();
                 
                 ConexionSQL conectar = new ConexionSQL();
                 Statement st = conectar.Conectar();
                 try{
                     
                    st.executeUpdate("INSERT INTO alumno VALUES ('" + rut_alumno + "', '" + nombre_alumno + "', '" + apellido_paterno + "','" + apellido_materno + "','" + fono_alumno  +"','" + direccion_alumno + "','" + fecha_nacimiento +"','" + sexo_alumno +"','" + nacionalidad_alumno +"' , 'activo')");
                    JOptionPane.showMessageDialog(null, "Alumno ingresado correctamente");
                    
                    }
                 
                 catch (SQLException ex){
                     
                     JOptionPane.showMessageDialog(null, ex);
                     
                     }
                 }
             }
    }
          void update_estado_alumno(){
               String rut_alumno = txtrut.getText();
       
       
        
             
             
                 ConexionSQL conectar = new ConexionSQL();
                 Statement st = conectar.Conectar();
                 try{
                     
                    st.executeUpdate("update alumno set estado = 'activo' where alumno.rut_alumno = '"+ rut_alumno +"' " );
                    JOptionPane.showMessageDialog(null, "Estado Alumno Activo","Informacion",JOptionPane.INFORMATION_MESSAGE);
                    
                    }
                 
                 catch (SQLException ex){
                     
                     JOptionPane.showMessageDialog(null, ex);
                     
                     }
                 
             
    }
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       
          String rut_alumno = txtrut.getText();
         //String nombre_alumno = txtnombre.getText();
         //String apellido_paterno = txtapellidop.getText();
         //String apellido_materno = txtapellidom.getText();
         //Integer fono_alumno = Integer.parseInt(txtfono.getText());
         //String direccion_alumno = txtdireccion.getText();
 
        if(rut_alumno.isEmpty() ){
          
         JOptionPane.showMessageDialog(null,"Debe inresar RUT","ERROR",JOptionPane.ERROR_MESSAGE);
        }else
         {
             ConexionSQL conectar = new ConexionSQL();
             Statement st = conectar.Conectar();
        try{
            ResultSet rs = st.executeQuery("select alumno.nombres_alumno, alumno.apellido_paterno, alumno.apellido_materno,alumno.fono_alumno, alumno.direccion_alumno , alumno.sexo_alumno , alumno.fecha_nacimiento , alumno.nacionalidad_alumno from alumno where alumno.rut_alumno='" + rut_alumno +"'");
            if (rs.next()){
                
                txtnombre.setText(rs.getString("nombres_Alumno")) ;
                txtapellidop.setText(rs.getString("apellido_paterno"));
                txtapellidom.setText(rs.getString("apellido_materno"));
                txtfono.setText(rs.getString("fono_alumno"));
                txtdireccion.setText(rs.getString("direccion_alumno"));
                combosexo.setSelectedItem(rs.getString("sexo_alumno"));
                combonacionalidad.setSelectedItem(rs.getString("nacionalidad_alumno"));
                calendarnacimiento.setDate(rs.getDate("fecha_nacimiento"));
                update_estado_alumno();
                
                   
            } else{
                 insertar_alumno();
              
            }
        }
        catch (SQLException ex){
            JOptionPane.showMessageDialog(null, ex);
        } 
        }
        
        
        
       
 
         
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        txtrut.setText("");
          txtnombre.setText("");
            txtfono.setText("");
              txtdireccion.setText("");
                txtapellidop.setText("");
                  txtapellidom.setText("");
                  combosexo.setSelectedIndex(0);
                  combonacionalidad.setSelectedIndex(0);
  
    }//GEN-LAST:event_jButton4ActionPerformed

    public static boolean validarRut(String rut) {
        

        boolean validacion = false;
        try {
        rut =  rut.toUpperCase();
        rut = rut.replace(".", "");
        rut = rut.replace("-", "");
        int rutAux = Integer.parseInt(rut.substring(0, rut.length() - 1));

        char dv = rut.charAt(rut.length() - 1);

        int m = 0, s = 1;
        for (; rutAux != 0; rutAux /= 10) {
        s = (s + rutAux % 10 * (9 - m++ % 6)) % 11;
        }
        if (dv == (char) (s != 0 ? s + 47 : 75)) {
        validacion = true;
        }

} catch (java.lang.NumberFormatException e) {
} catch (Exception e) {
}
return validacion;
}
    private void txtrutKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtrutKeyTyped
       
        int n=10;
        if(txtrut.getText().length()>=n){
            
            getToolkit().beep();
            evt.consume();
             JOptionPane.showMessageDialog(null,"solo 10 dijitos sin puntos","ERROR",JOptionPane.WARNING_MESSAGE);
               
       }
    }//GEN-LAST:event_txtrutKeyTyped

    private void txtfonoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfonoKeyTyped
    
          int n=9;
       if(txtfono.getText().length()>=n){
            getToolkit().beep();
           evt.consume();
            JOptionPane.showMessageDialog(null,"Solo 9 digitos","ERROR",JOptionPane.WARNING_MESSAGE);
       }
       char c=evt.getKeyChar();
               if(c<'0' || c>'9'){
                   evt.consume();
               }
    }//GEN-LAST:event_txtfonoKeyTyped

    private void txtnombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnombreKeyTyped
      
        int n=200;
        if(txtnombre.getText().length()>=n){
            
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null,"Exceso de caracteres","ERROR",JOptionPane.WARNING_MESSAGE);
       }
         char c=evt.getKeyChar();
        if(((c<'a' || c>'z')&&(c<'A')|c>'Z')  &&(c!='ñ')&&( c!='Ñ')  && (c!= KeyEvent.VK_SPACE))evt.consume(); 
        
         if(Character.isLowerCase(c)){
            String cad=(""+c).toUpperCase();
            c=cad.charAt(0);
            evt.setKeyChar(c);
            
        }
       
    }//GEN-LAST:event_txtnombreKeyTyped

    private void txtapellidopKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtapellidopKeyTyped
      
        int n=48;
        if(txtapellidop.getText().length()>=n){
            
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null,"Exceso de caracteres","ERROR",JOptionPane.WARNING_MESSAGE);
       }
         char c=evt.getKeyChar();
        if(((c<'a' || c>'z')&&(c<'A')|c>'Z')  &&(c!='ñ')&&( c!='Ñ'))evt.consume(); 
        
         if(Character.isLowerCase(c)){
            String cad=(""+c).toUpperCase();
            c=cad.charAt(0);
            evt.setKeyChar(c);
            
        }
    }//GEN-LAST:event_txtapellidopKeyTyped

    private void txtapellidomKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtapellidomKeyTyped
      
        int n=48;
        if(txtapellidom.getText().length()>=n){
            
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null,"Exceso de caracteres","ERROR",JOptionPane.WARNING_MESSAGE);
       }
         char c=evt.getKeyChar();
        if(((c<'a' || c>'z')&&(c<'A')|c>'Z')  &&(c!='ñ')&&( c!='Ñ'))evt.consume(); 
        
         if(Character.isLowerCase(c)){
            String cad=(""+c).toUpperCase();
            c=cad.charAt(0);
            evt.setKeyChar(c);
            
        }
    }//GEN-LAST:event_txtapellidomKeyTyped

    private void txtdireccionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtdireccionKeyTyped
    
        
        int n=320;
        if(txtdireccion.getText().length()>=n){
            
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null,"Exceso de caracteres","ERROR",JOptionPane.WARNING_MESSAGE);
       }
         char c=evt.getKeyChar();
        if(((c<'a' || c>'z')&&(c<'A')|c>'Z')  &&(c!='ñ')&&( c!='Ñ')  &&(c!='/')&&(c!='.')&&(c!=',')&&(c!='-') && (c!= KeyEvent.VK_SPACE))evt.consume(); 
        
         if(Character.isLowerCase(c)){ 
            String cad=(""+c).toUpperCase();
            c=cad.charAt(0);
            evt.setKeyChar(c);
            
        }
    }//GEN-LAST:event_txtdireccionKeyTyped

    private void txtapellidopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtapellidopActionPerformed
     
    }//GEN-LAST:event_txtapellidopActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameAlumno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameAlumno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameAlumno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameAlumno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameAlumno().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JCalendar calendarnacimiento;
    private javax.swing.JComboBox combonacionalidad;
    private javax.swing.JComboBox combosexo;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField txtapellidom;
    private javax.swing.JTextField txtapellidop;
    private javax.swing.JTextField txtdireccion;
    private javax.swing.JTextField txtfono;
    private javax.swing.JTextField txtnombre;
    private javax.swing.JTextField txtrut;
    // End of variables declaration//GEN-END:variables
}
